<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">

	<context:property-placeholder location="/WEB-INF/conf/general.properties" />

	<!-- Activation des annotations @Secured -->
	<security:global-method-security
		secured-annotations="enabled" access-decision-manager-ref="accessDecisionManager"
		proxy-target-class="true" />

	<!-- Déclencheur de l'authentification spécifique au cas de la pre-authentification 
		(ne déclenche rien et renvoi une erreur 403) -->
	<bean id="preAuthEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

	<!-- Gestionnaire d'accès "AffirmativeBased" (un seul vote est suffisant) -->
	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter">
					<!-- Suppression du préfix devant les nom de rôle -->
					<property name="rolePrefix" value="" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- Filtre de pre-authentification : récupère les infos d'authentification 
		j2ee standard -->
	<bean id="j2eePreAuthProcessingFilter"
		class="org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<!-- Gestionnaire d'authentification -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="preAuthAuthenticationProvider" />
	</security:authentication-manager>

	<!-- Fourniseur d'authentification basé sur les informations de pre-authentification -->
	<bean id="preAuthAuthenticationProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService" ref="solarUserService" />
	</bean>

	<!-- Service de récupération du détail d'un utilisateur (compte / état / 
		rôles) depuis Solar -->
	<bean id="solarUserService"
		class="santeclair.lunar.framework.web.security.service.impl.SolarUserServiceImpl"
		init-method="init">
		<property name="nomApplication" value="${application.nom}" />
		<property name="urlWebService" value="${roles.ws.url}" />
	</bean>

</beans>
